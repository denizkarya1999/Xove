@page "/viewpartner/{partnerid:guid}"
@using MediatR
@using Xove.Shared.Features.Partners
@inject IMediator _mediator
@inject NavigationManager _navigationManager
@inject IDialogService _dialogService


<div class="d-flex justify-space-between align-center pa-4">
    <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.ArrowBack" OnClick="NavigateBack" />
</div>
<div>
    <MudCarousel Class="mud-width-full pa-4 mb-6" Style="height:400px;" ShowArrows="@arrows" ShowBullets="@bullets" AutoCycle="@autocycle" TData="object" >
    <MudCarouselItem Transition="transition" Style="@($"color:{Colors.Grey.Lighten5};")">
        <div class="d-flex" style="height:100%">
            <MudImage Fluid="true" Src="men-love.jpg" Class="mx-auto my-auto" Alt="This is a temproary picture"/>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition" Style="@($"color:{Colors.Grey.Lighten5};")">
        <div class="d-flex" style="height:100%">
            <MudImage Fluid="true" Src="woman-love.jpg" Class="mx-auto my-auto" Alt="This is a temproary picture" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition" Style="@($"color:{Colors.Grey.Lighten5};")">
        <div class="d-flex" style="height:100%">
            <MudImage Fluid="true" Src="straight-love.jpg" Class="mx-auto my-auto" Alt="This is a temproary picture"/>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition" Style="@($"color:{Colors.Grey.Lighten5};")">
        <div class="d-flex" style="height:100%">
            <MudImage Fluid="true" Src="more-love.jpg" Class="mx-auto my-auto" Alt="This is a temproary picture"/>
        </div>
    </MudCarouselItem>
</MudCarousel>
</div>
@if (_partner == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <EpiViewLayout>
        <EpiViewMain>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText><h1><strong>@_partner.FullName,</strong> @_partner.Age</h1></MudText>
                        <MudText><MudIcon Icon="@Icons.Material.Filled.Work" Size="Size.Small" /> @_partner.CurrentPosition</MudText>
                        <MudText><MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Small" /> @_partner.SexualOrientation @_partner.Gender</MudText>
                    <MudText><MudIcon Icon="@Icons.Material.Filled.Home" Size="Size.Small" /> Lives in @_partner.Location</MudText>
                    <MudText><MudIcon Icon="@Icons.Material.Filled.SportsBasketball" Size="Size.Small" /> Interested in @_partner.Interests</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>@_partner.ShortBiography</MudText>
                </MudCardContent>
            </MudCard>
        </EpiViewMain>
        <EpiViewSide>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText>Actions</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardActions>
                    <MudButton StartIcon="@Icons.Material.Filled.Edit" OnClick="Edit">Edit</MudButton>
                </MudCardActions>
            </MudCard>
        </EpiViewSide>
    </EpiViewLayout>
}

@code {
    private bool arrows = true;
    private bool bullets = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    private ViewPartnerDto _partner;

    [Parameter] public Guid PartnerId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _partner = (await _mediator.Send(new ViewPartnerRequest(PartnerId))).Partner;
    }

    private void NavigateBack()
    {
        _navigationManager.NavigateTo("/partners");
    }

    private void Edit()
    {
        _navigationManager.NavigateTo($"/editpartner/{PartnerId}");
    }
}
